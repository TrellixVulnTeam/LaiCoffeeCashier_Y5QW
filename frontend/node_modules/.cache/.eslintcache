[{"/Users/sawidlimkiatsataporn/Documents/Project_Web_Application/LaiCoffeeCashier/frontend/src/index.js":"1","/Users/sawidlimkiatsataporn/Documents/Project_Web_Application/LaiCoffeeCashier/frontend/src/App.js":"2","/Users/sawidlimkiatsataporn/Documents/Project_Web_Application/LaiCoffeeCashier/frontend/src/reportWebVitals.js":"3","/Users/sawidlimkiatsataporn/Documents/Project_Web_Application/LaiCoffeeCashier/frontend/src/components/pages/cashier/Cashier.js":"4","/Users/sawidlimkiatsataporn/Documents/Project_Web_Application/LaiCoffeeCashier/frontend/src/components/pages/main/Main.js":"5","/Users/sawidlimkiatsataporn/Documents/Project_Web_Application/LaiCoffeeCashier/frontend/src/components/functions/menu.js":"6","/Users/sawidlimkiatsataporn/Documents/Project_Web_Application/LaiCoffeeCashier/frontend/src/components/functions/menusection.js":"7","/Users/sawidlimkiatsataporn/Documents/Project_Web_Application/LaiCoffeeCashier/frontend/src/components/functions/menuoption.js":"8"},{"size":581,"mtime":1659427651537,"results":"9","hashOfConfig":"10"},{"size":708,"mtime":1659427651536,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1659427651537,"results":"12","hashOfConfig":"10"},{"size":13150,"mtime":1659427651537,"results":"13","hashOfConfig":"10"},{"size":1444,"mtime":1659427651537,"results":"14","hashOfConfig":"10"},{"size":154,"mtime":1659427651536,"results":"15","hashOfConfig":"10"},{"size":168,"mtime":1659427651537,"results":"16","hashOfConfig":"10"},{"size":166,"mtime":1659427651536,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14ykxlx",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sawidlimkiatsataporn/Documents/Project_Web_Application/LaiCoffeeCashier/frontend/src/index.js",[],[],"/Users/sawidlimkiatsataporn/Documents/Project_Web_Application/LaiCoffeeCashier/frontend/src/App.js",["45"],[],"import React from \"react\"\nimport logo from './logo.svg';\nimport './App.scss';\nimport Main from './components/pages/main/Main';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport { Routes, Route } from 'react-router-dom';\nimport Cashier from './components/pages/cashier/Cashier';\n\nconst DefaultContainer = () => {\n  return (\n  <React.Fragment>\n    <Main />\n    <Routes>\n      <Route path=\"/\" element={ <Cashier/> }/>\n    </Routes>\n  </React.Fragment>\n  )\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Routes>\n          <Route path=\"/cashier\" element={ <Cashier/> }/>\n          <Route path=\"*\" element={ <DefaultContainer/> }/>\n        </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/sawidlimkiatsataporn/Documents/Project_Web_Application/LaiCoffeeCashier/frontend/src/reportWebVitals.js",[],[],"/Users/sawidlimkiatsataporn/Documents/Project_Web_Application/LaiCoffeeCashier/frontend/src/components/pages/cashier/Cashier.js",["46","47","48","49"],[],"import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Col,\n  Container,\n  Row,\n  Card,\n  Modal,\n  Form,\n} from \"react-bootstrap\";\nimport { BsFillTrashFill } from \"react-icons/bs\";\nimport InputSpinner from \"react-bootstrap-input-spinner\";\nimport { listMenu } from \"../../functions/menu\";\n\nimport { listMenuSection } from \"../../functions/menusection\";\nimport { listMenuOption } from \"../../functions/menuoption\";\n\nconst Cashier = () => {\n  // Initial Variable\n  // Data Fetch Variable\n  const [dataListMenuSection, setDataListMenuSection] = useState([]);\n  const [dataListMenuOption, setDataListMenuOption] = useState([]);\n  const [dataListMenuShow, setDataListMenuShow] = useState([]);\n  const [dataListMenu, setDataListMenu] = useState([]);\n  // Data On Page\n  const [dataSelectedMenu, setDataSelectedMenu] = useState([]);\n  const [dataSelectedMenuOption, setDataSelectedMenuOption] = useState([]);\n\n  // Modal\n  const [show, setShow] = useState(false);\n  const [showModalDelete, setShowModalDelete] = useState(false);\n  const [dataModal, setDataModal] = useState({ menuName: \"\", menuId: \"\", menuOption:[] });\n  const [dataModalDelete, setDataModalDelete] = useState({\n    menuName: \"\",\n    menuId: \"\",\n  });\n  const [numberMenu, setNumberMenu] = useState(1);\n\n  // Temporary Data\n  const [dataMenuMemo, setDataMenuMemo] = useState({ menuMemo: \"\" });\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const handleShow = (menuName, menuId, menuOption) => {\n    setDataModal({ menuName: menuName, menuId: menuId, menuOption: menuOption });\n    setDataSelectedMenuOption(menuOption.map(item => {\n      const queryMenuType = dataListMenuOption.filter((element) => {\n        if(element._id === item) {\n          return element.menuType\n        }\n      })\n      if(queryMenuType[0].menuType === 1) {\n        return {checkedId: item, checkedStatus: false, checkedText:\"\"}\n      }\n      else {\n      return {checkedId: item, checkedStatus: false, checkedText:[]}\n    }\n    }))\n    setShow(true);\n    // console.log(dataModal);\n  };\n  // console.log(dataListMenuOption)\n  // console.log(dataSelectedMenuOption)\n\n  const handleCloseModalDelete = () => {\n    setShowModalDelete(false);\n  };\n\n  const handleShowModalDelete = (menuName, menuId) => {\n    setDataModalDelete({ menuName: menuName, menuId: menuId });\n    setShowModalDelete(true);\n  };\n\n  // console.log(dataListMenuSection);\n\n  // useEffect Action\n  useEffect(() => {\n    loadDataMenuSection();\n    loadDataMenuOption();\n    loadDataMenu();\n  }, []);\n\n  // Fetch Data\n  const loadDataMenuSection = () => {\n      listMenuSection()\n      .then((res) => {\n        setDataListMenuSection(res.data);\n      })\n      .catch((error) => {\n        console.log(error.response.data);\n      });\n  };\n\n  const loadDataMenuOption = () => {\n      listMenuOption()\n      .then((res) => {\n        setDataListMenuOption(res.data);\n      })\n      .catch((error) => {\n        console.log(error.response.data);\n      });\n  };\n\n  const loadDataMenu = () => {\n      listMenu()\n      .then((res) => {\n        setDataListMenu(res.data);\n        setDataListMenuShow(res.data);\n      })\n      .catch((error) => {\n        console.log(error.response.data);\n      });\n  };\n\n  //Handling Event\n  //OnClick Event\n  const handleClickSort = (data) => {\n    setDataListMenuShow(dataListMenu);\n    setDataListMenuShow((dataCurrent) =>\n      dataCurrent.filter((listMenu) => {\n        return listMenu.menuSection === data;\n      })\n    );\n  };\n\n  const handleClickMenuAddSelect = (menuName, menuId, numberMenu, menuMemo) => {\n    if (\n      dataSelectedMenu.find((element) => {\n        return element.menuId === menuId;\n      })\n    ) {\n      const newState = dataSelectedMenu.map((item) => {\n        if (item.menuId === menuId) {\n          var totalNumberMenu = item.menuAmount + numberMenu;\n          return { ...item, menuAmount: totalNumberMenu };\n        }\n        return item;\n      });\n      setDataSelectedMenu(newState);\n    } else {\n      setDataSelectedMenu((prev) => [\n        ...prev,\n        {\n          menuName: menuName,\n          menuId: menuId,\n          menuAmount: numberMenu,\n          menuMemo: menuMemo,\n        },\n      ]);\n    }\n    setShow(false);\n    setNumberMenu(1);\n    setDataMenuMemo({ menuMemo: \"\" });\n  };\n\n  const handleClickShowList = () => {\n    setDataListMenuShow(dataListMenu);\n  };\n\n  const handleRemoveSelectedMenu = (menuId) => {\n    const newStateRemove = dataSelectedMenu.filter(\n      (item) => item.menuId !== menuId\n    );\n    setDataSelectedMenu(newStateRemove);\n    setShowModalDelete(false);\n  };\n\n  //onChange Event\n  const handleChangeInputMenuMemo = (e) => {\n    setDataMenuMemo({ ...dataMenuMemo, [e.target.name]: e.target.value });\n  };\n\n  const handleChangeUpdateSelectedOption = (menuOptionId, menuOptionType, menuOptionName) => {\n    // console.log(menuOptionId, menuOptionType, menuOptionName);\n    dataSelectedMenuOption.map(item => {\n      \n      if (item.checkedId === menuOptionId) {\n        // console.log(item)\n        if (menuOptionType === 1) {\n          if (menuOptionName === item.checkedText) {\n            // setDataSelectedMenuOption({ ...item, checkedText: \"\"})\n            // console.log(item ,menuOptionName)\n          }\n          else if (item.checkedText === \"\") {\n            const tempCheckId = item.checkedId\n            const newStateSet = dataSelectedMenuOption.map(currentItem => {\n              return currentItem.checkedId === item.checkedId ? \"natch\" : \"unmatch\";\n            })\n            console.log(newStateSet)\n            // setDataSelectedMenuOption(newStateSet)\n            // console.log(item ,menuOptionName)\n          }\n        }\n      }\n    })\n  }\n\n  // console.log(dataMenuMemo);\n  return (\n    <div>\n      <Container fluid={true}>\n        <Row>\n          <Col md={8} className=\"mt-2\">\n            <Row>\n              <Col>\n                <Button\n                  variant=\"primary\"\n                  size=\"lg\"\n                  onClick={() => handleClickShowList()}\n                >\n                  แสดงทั้งหมด\n                </Button>\n                {\"   \"}\n                {dataListMenuSection.map((item, index) => (\n                  <>\n                    <Button\n                      variant=\"primary\"\n                      size=\"lg\"\n                      onClick={() => handleClickSort(item._id)}\n                    >\n                      {item.menuSectionName}\n                    </Button>\n                    {\"   \"}\n                  </>\n                ))}\n              </Col>\n            </Row>\n            <Row className=\"mt-2\">\n              {dataListMenuShow.map((item, index) => (\n                <Col md={2}>\n                  <Card\n                    onClick={() => handleShow(item.menuName, item._id, item.menuOption)}\n                    style={{ cursor: \"pointer\" }}\n                  >\n                    <Card.Img\n                      variant=\"top\"\n                      src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22286%22%20height%3D%22180%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20286%20180%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_18230cc1913%20text%20%7B%20fill%3A%23999%3Bfont-weight%3Anormal%3Bfont-family%3Avar(--bs-font-sans-serif)%2C%20monospace%3Bfont-size%3A14pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_18230cc1913%22%3E%3Crect%20width%3D%22286%22%20height%3D%22180%22%20fill%3D%22%23373940%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22108.53973770141602%22%20y%3D%2297.50013675689698%22%3E286x180%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\"\n                    />\n                    <Card.Body className=\"m-auto\">\n                      <Card.Title> {item.menuName} </Card.Title>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              ))}\n            </Row>\n          </Col>\n          <Col className=\"mt-2\" md={4}>\n            <Card border=\"secondary\" key={\"Light\"}>\n              <Card.Header>สรุปบิล</Card.Header>\n              <Card.Body>\n                <Card.Title> รายการอาหาร </Card.Title>\n                {Object.keys(dataSelectedMenu).length === 0 ? (\n                  <Card.Text>ไม่มีรายการ</Card.Text>\n                ) : (\n                  \"\"\n                )}\n                {dataSelectedMenu.map((item, index) => (\n                  <Card.Text>\n                    <Row>\n                      <Col md={4}>\n                        <Col>{item.menuName}</Col>\n                        {item.menuMemo.length === 0 ? (\n                          <React.Fragment></React.Fragment>\n                        ) : (\n                          <Col className=\"text-warning\"> * {item.menuMemo}</Col>\n                        )}\n                      </Col>\n                      <Col className=\"align-items-end\">\n                        {\" \"}\n                        จำนวน {item.menuAmount}{\" \"}\n                      </Col>\n                      <Col md={3} className=\"text-right\">\n                        <Button\n                          size=\"sm\"\n                          variant=\"danger\"\n                          onClick={() =>\n                            handleShowModalDelete(item.menuName, item.menuId)\n                          }\n                        >\n                          <BsFillTrashFill /> ลบเมนู\n                        </Button>\n                      </Col>\n                    </Row>\n                  </Card.Text>\n                ))}\n\n                <Card.Title> สรุปรายการ </Card.Title>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n      {/* Modal */}\n\n      <Modal className=\"font-sarabun\" show={show} onHide={handleClose}>\n        <Modal.Header>\n          <Modal.Title>เพิ่มรายการ {dataModal.menuName}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Label>จำนวน</Form.Label>\n          <InputSpinner\n            type={\"real\"}\n            precision={0}\n            max={10}\n            min={1}\n            step={1}\n            value={numberMenu}\n            onChange={(num) => setNumberMenu(num)}\n            variant={\"dark\"}\n            size=\"md\"\n          />\n          {\n            dataSelectedMenuOption.map(item => {\n              const querydata = dataListMenuOption.find(element => {\n                if(item.checkedId === element._id) {\n                  return element\n                }\n              })\n              return <Form className=\"mt-2\">\n              <Form.Group>\n                <Form.Label>เลือก {querydata.menuOptionName}</Form.Label>\n                {\n                  querydata.menuOptionChoice.map((element, index) => (\n                    <Form.Check\n                    type={ querydata.menuType === 2 ? \"checkbox\" : \"radio\" }\n                    id={element._id}\n                    name={querydata._id}\n                    label={element.menuOptionChoiceName}\n                    onClick={() => handleChangeUpdateSelectedOption(querydata._id, querydata.menuType, element.menuOptionChoiceName)}\n                  />\n                  ))\n                }\n               \n                \n              </Form.Group>\n            </Form>\n            })\n          }\n          \n          \n          <Form className=\"mt-2\">\n            <Form.Group>\n              <Form.Label>หมายเหตุ</Form.Label>\n              <Form.Control\n                name=\"menuMemo\"\n                size=\"md\"\n                type=\"text\"\n                placeholder=\"รายละเอียด\"\n                onChange={(e) => handleChangeInputMenuMemo(e)}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            ปิด\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={() =>\n              handleClickMenuAddSelect(\n                dataModal.menuName,\n                dataModal.menuId,\n                numberMenu,\n                dataMenuMemo.menuMemo\n              )\n            }\n          >\n            เพิ่มเมนู\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal\n        className=\"font-sarabun\"\n        show={showModalDelete}\n        onHide={handleClose}\n      >\n        <Modal.Header>\n          <Modal.Title>ลบรายการ {dataModalDelete.menuName}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>ยืนยันการลบเมนู</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => handleCloseModalDelete()}>\n            ปิด\n          </Button>\n          <Button\n            variant=\"danger\"\n            onClick={() => handleRemoveSelectedMenu(dataModalDelete.menuId)}\n          >\n            ลบเมนู\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Cashier;\n","/Users/sawidlimkiatsataporn/Documents/Project_Web_Application/LaiCoffeeCashier/frontend/src/components/pages/main/Main.js",["50","51"],[],"import React from \"react\";\nimport { Button, Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\nimport \"./main.styles.scss\";\nconst Main = () => {\n  return (\n    <div>\n      <Navbar className=\"navBarBackground text-light\" expand=\"lg\">\n        <Container className=\"\">\n          <Navbar.Brand className=\"text-light\">\n            ระบบเครื่องคิดเงิน<b>ไลคอฟฟี่</b>{\" \"}\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link className=\"text-light\" href=\"/cashier\">\n                เครื่องคิดเงิน\n              </Nav.Link>\n              <Nav.Link className=\"text-light\" href=\"#link\">\n                สต็อควัตถุดิบ\n              </Nav.Link>\n              <Nav.Link className=\"text-light\" href=\"#link\">\n                สรุปยอดขายวันนี้\n              </Nav.Link>\n              <Nav.Link className=\"text-light\" href=\"#link\">\n                จัดการเมนู\n              </Nav.Link>\n              <Nav.Link className=\"text-light\" href=\"#link\">\n                ตารางลูกค้า\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Main;\n","/Users/sawidlimkiatsataporn/Documents/Project_Web_Application/LaiCoffeeCashier/frontend/src/components/functions/menu.js",[],[],"/Users/sawidlimkiatsataporn/Documents/Project_Web_Application/LaiCoffeeCashier/frontend/src/components/functions/menusection.js",[],[],"/Users/sawidlimkiatsataporn/Documents/Project_Web_Application/LaiCoffeeCashier/frontend/src/components/functions/menuoption.js",[],[],{"ruleId":"52","severity":1,"message":"53","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":12},{"ruleId":"56","severity":1,"message":"57","line":49,"column":65,"nodeType":"58","messageId":"59","endLine":49,"endColumn":67},{"ruleId":"56","severity":1,"message":"60","line":177,"column":37,"nodeType":"58","messageId":"61","endLine":177,"endColumn":39},{"ruleId":"52","severity":1,"message":"62","line":187,"column":19,"nodeType":"54","messageId":"55","endLine":187,"endColumn":30},{"ruleId":"56","severity":1,"message":"63","line":316,"column":65,"nodeType":"58","messageId":"59","endLine":316,"endColumn":67},{"ruleId":"52","severity":1,"message":"64","line":2,"column":10,"nodeType":"54","messageId":"55","endLine":2,"endColumn":16},{"ruleId":"52","severity":1,"message":"65","line":2,"column":42,"nodeType":"54","messageId":"55","endLine":2,"endColumn":53},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside","'tempCheckId' is assigned a value but never used.","Array.prototype.find() expects a value to be returned at the end of arrow function.","'Button' is defined but never used.","'NavDropdown' is defined but never used."]