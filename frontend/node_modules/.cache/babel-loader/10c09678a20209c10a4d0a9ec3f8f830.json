{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sawid\\\\Desktop\\\\Asset\\\\Project_LaiCoffee\\\\client\\\\src\\\\components\\\\pages\\\\main\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button } from '@nextui-org/react';\nimport { useTheme, Text } from '@nextui-org/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const {\n    theme\n  } = useTheme();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      css: {\n        color: '$blue800',\n        fontSize: '$sm',\n        padding: '$2 $4'\n      },\n      children: \"Using tokens\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: theme.colors.primary.value,\n        fontSize: theme.fontSizes.sm.value,\n        padding: `${theme.space[2].value} ${theme.space[4].value}`\n      },\n      children: \"Using color theme value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"JkSxfi8+JQlqgIgDOc3wQN+nVIw=\", false, function () {\n  return [useTheme];\n});\n\n_c = Main;\nexport default {\n  colors: {\n    // generic colors\n    white: '#ffffff',\n    black: '#000000',\n    //semantic colors (light)\n    blue50: '#EDF5FF',\n    // ...\n    blue900: '#00254D',\n    // ...\n    // brand colors\n    primaryLight: '$blue200',\n    primaryLightHover: '$blue300',\n    // commonly used on hover state\n    primaryLightActive: '$blue400',\n    // commonly used on pressed state\n    primaryLightContrast: '$blue600',\n    // commonly used for text inside the component\n    primary: '$blue600',\n    primaryBorder: '$blue500',\n    primaryBorderHover: '$blue600',\n    primarySolidHover: '$blue700',\n    primarySolidContrast: '$white',\n    // commonly used for text inside the component\n    primaryShadow: '$blue500' // ... rest of colors (secondary, success, warning, error, etc)\n\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","Button","useTheme","Text","Main","theme","color","fontSize","padding","colors","primary","value","fontSizes","sm","space","white","black","blue50","blue900","primaryLight","primaryLightHover","primaryLightActive","primaryLightContrast","primaryBorder","primaryBorderHover","primarySolidHover","primarySolidContrast","primaryShadow"],"sources":["C:/Users/Sawid/Desktop/Asset/Project_LaiCoffee/client/src/components/pages/main/Main.js"],"sourcesContent":["import React from 'react'\r\nimport { Button } from '@nextui-org/react';\r\nimport { useTheme, Text } from '@nextui-org/react';\r\n\r\nconst Main = () =>  {\r\n  const { theme } = useTheme();\r\n\r\n  return (\r\n    <div>\r\n      <Text\r\n        css={{\r\n          color: '$blue800',\r\n          fontSize: '$sm',\r\n          padding: '$2 $4'\r\n        }}\r\n      >\r\n        Using tokens\r\n      </Text>\r\n      <p\r\n        style={{\r\n          color: theme.colors.primary.value,\r\n          fontSize: theme.fontSizes.sm.value,\r\n          padding: `${theme.space[2].value} ${theme.space[4].value}`\r\n        }}\r\n      >\r\n        Using color theme value\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default {\r\n  colors: {\r\n    // generic colors\r\n    white: '#ffffff',\r\n    black: '#000000',\r\n    //semantic colors (light)\r\n    blue50: '#EDF5FF',\r\n    // ...\r\n    blue900: '#00254D',\r\n    // ...\r\n\r\n    // brand colors\r\n    primaryLight: '$blue200',\r\n    primaryLightHover: '$blue300', // commonly used on hover state\r\n    primaryLightActive: '$blue400', // commonly used on pressed state\r\n    primaryLightContrast: '$blue600', // commonly used for text inside the component\r\n    primary: '$blue600',\r\n    primaryBorder: '$blue500',\r\n    primaryBorderHover: '$blue600',\r\n    primarySolidHover: '$blue700',\r\n    primarySolidContrast: '$white', // commonly used for text inside the component\r\n    primaryShadow: '$blue500'\r\n\r\n    // ... rest of colors (secondary, success, warning, error, etc)\r\n  }\r\n};"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,mBAA/B;;;AAEA,MAAMC,IAAI,GAAG,MAAO;EAAA;;EAClB,MAAM;IAAEC;EAAF,IAAYH,QAAQ,EAA1B;EAEA,oBACE;IAAA,wBACE,QAAC,IAAD;MACE,GAAG,EAAE;QACHI,KAAK,EAAE,UADJ;QAEHC,QAAQ,EAAE,KAFP;QAGHC,OAAO,EAAE;MAHN,CADP;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAUE;MACE,KAAK,EAAE;QACLF,KAAK,EAAED,KAAK,CAACI,MAAN,CAAaC,OAAb,CAAqBC,KADvB;QAELJ,QAAQ,EAAEF,KAAK,CAACO,SAAN,CAAgBC,EAAhB,CAAmBF,KAFxB;QAGLH,OAAO,EAAG,GAAEH,KAAK,CAACS,KAAN,CAAY,CAAZ,EAAeH,KAAM,IAAGN,KAAK,CAACS,KAAN,CAAY,CAAZ,EAAeH,KAAM;MAHpD,CADT;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CAzBD;;GAAMP,I;UACcF,Q;;;KADdE,I;AA2BN,eAAe;EACbK,MAAM,EAAE;IACN;IACAM,KAAK,EAAE,SAFD;IAGNC,KAAK,EAAE,SAHD;IAIN;IACAC,MAAM,EAAE,SALF;IAMN;IACAC,OAAO,EAAE,SAPH;IAQN;IAEA;IACAC,YAAY,EAAE,UAXR;IAYNC,iBAAiB,EAAE,UAZb;IAYyB;IAC/BC,kBAAkB,EAAE,UAbd;IAa0B;IAChCC,oBAAoB,EAAE,UAdhB;IAc4B;IAClCZ,OAAO,EAAE,UAfH;IAgBNa,aAAa,EAAE,UAhBT;IAiBNC,kBAAkB,EAAE,UAjBd;IAkBNC,iBAAiB,EAAE,UAlBb;IAmBNC,oBAAoB,EAAE,QAnBhB;IAmB0B;IAChCC,aAAa,EAAE,UApBT,CAsBN;;EAtBM;AADK,CAAf"},"metadata":{},"sourceType":"module"}