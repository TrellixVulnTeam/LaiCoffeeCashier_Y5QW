{"ast":null,"code":"var _jsxFileName = \"/Users/sawidlimkiatsataporn/Documents/Project_Web_Application/LaiCoffeeCashier/frontend/src/components/pages/cashier/Cashier.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Col, Container, Row, Card, Modal, Form, Badge } from \"react-bootstrap\";\nimport { BsFillTrashFill } from \"react-icons/bs\";\nimport InputSpinner from \"react-bootstrap-input-spinner\";\nimport { listMenu } from \"../../functions/menu\";\nimport { listMenuSection } from \"../../functions/menusection\";\nimport { listMenuOption, listMenuOptionChoice } from \"../../functions/menuoption\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cashier = () => {\n  _s();\n\n  // Initial Variable\n  // Data Fetch Variable\n  const [dataListMenuSection, setDataListMenuSection] = useState([]);\n  const [dataListMenuOption, setDataListMenuOption] = useState([]);\n  const [dataListMenuShow, setDataListMenuShow] = useState([]);\n  const [dataListMenu, setDataListMenu] = useState([]);\n  const [dataListMenuOptionChoice, setDataListMenuOptionChoice] = useState([]); // Data On Page\n\n  const [dataSelectedMenu, setDataSelectedMenu] = useState([]);\n  const [dataSelectedMenuOption, setDataSelectedMenuOption] = useState([]);\n  const [dataTotalPrice, setDataTotalPrice] = useState([]);\n  const [dataListMenuOnCondition, setDataListMenuOnCondition] = useState([]); // Gobal Variable\n\n  const [totalBillPrice, setTotalBillPrice] = useState(0); // Modal\n\n  const [show, setShow] = useState(false);\n  const [showModalDelete, setShowModalDelete] = useState(false);\n  const [dataModal, setDataModal] = useState({\n    menuName: \"\",\n    menuId: \"\",\n    menuOption: []\n  });\n  const [dataModalDelete, setDataModalDelete] = useState({\n    menuName: \"\",\n    menuId: \"\",\n    menuOption: \"\"\n  });\n  const [numberMenu, setNumberMenu] = useState(1); // Temporary Data\n\n  const [dataMenuMemo, setDataMenuMemo] = useState({\n    menuMemo: \"\"\n  }); // Functional\n\n  const getNestedArrayToOneArray = array1 => {\n    let tempArray = [];\n    array1.forEach(tempDataSelected => {\n      if (Array.isArray(tempDataSelected)) {\n        tempDataSelected.map(tempOfTempDataSelected => {\n          tempArray.push(tempOfTempDataSelected);\n        });\n      } else if (tempDataSelected !== \"\") {\n        tempArray.push(tempDataSelected);\n      }\n    });\n    return tempArray;\n  };\n\n  const checkArrayIsSame = (array1, array2) => {\n    let tempArray1 = getNestedArrayToOneArray(array1);\n    let tempArray2 = getNestedArrayToOneArray(array2);\n    let isSame = tempArray1.length == tempArray2.length && tempArray1.every(function (element, index) {\n      return element === tempArray2[index];\n    });\n    return isSame;\n  }; // Fetch Data\n\n\n  const loadDataMenuSection = () => {\n    listMenuSection().then(res => {\n      setDataListMenuSection(res.data);\n    }).catch(error => {\n      console.log(error.response.data);\n    });\n  };\n\n  const loadDataMenuOption = () => {\n    listMenuOption().then(res => {\n      setDataListMenuOption(res.data);\n    }).catch(error => {\n      console.log(error.response.data);\n    });\n  };\n\n  const loadDataMenu = () => {\n    listMenu().then(res => {\n      setDataListMenu(res.data);\n      setDataListMenuShow(res.data);\n    }).catch(error => {\n      console.log(error.response.data);\n    });\n  };\n\n  const loadDataMenuOptionChoice = () => {\n    listMenuOptionChoice().then(res => {\n      setDataListMenuOptionChoice(res.data);\n    }).catch(error => {\n      console.log(error.response.data);\n    });\n  }; // useEffect Action\n\n\n  useEffect(() => {\n    loadDataMenuSection();\n    loadDataMenuOption();\n    loadDataMenu();\n    loadDataMenuOptionChoice();\n  }, []); // Modal Action\n\n  const handleClose = menuOption => {\n    setDataSelectedMenuOption(menuOption.map(item => {\n      const queryMenuTypeAddSelect = dataListMenuOption.filter(element => {\n        if (element._id === item) {\n          return element.menuType;\n        }\n      });\n\n      if (queryMenuTypeAddSelect[0].menuType === 1) {\n        return {\n          checkedId: item,\n          checkedStatus: false,\n          checkedText: \"\"\n        };\n      } else {\n        return {\n          checkedId: item,\n          checkedStatus: false,\n          checkedText: []\n        };\n      }\n    }));\n    setShow(false);\n  };\n\n  const handleShow = (menuName, menuId, menuOption) => {\n    setDataModal({\n      menuName: menuName,\n      menuId: menuId,\n      menuOption: menuOption\n    });\n    setDataSelectedMenuOption(menuOption.map(item => {\n      const queryMenuType = dataListMenuOption.filter(element => {\n        if (element._id === item) {\n          return element.menuType;\n        }\n      }); // console.log(dataListMenuOptionChoice)\n\n      if (queryMenuType[0].menuType === 1) {\n        return {\n          checkedId: item,\n          checkedStatus: false,\n          checkedText: \"\"\n        };\n      } else {\n        return {\n          checkedId: item,\n          checkedStatus: false,\n          checkedText: []\n        };\n      }\n    }));\n    setShow(true); // console.log(dataModal);\n  }; // console.log(dataSelectedMenuOption)\n\n\n  const handleCloseModalDelete = () => {\n    setShowModalDelete(false);\n  };\n\n  const handleShowModalDelete = (menuName, menuId, menuOption) => {\n    setDataModalDelete({\n      menuName: menuName,\n      menuId: menuId,\n      menuOption\n    });\n    setShowModalDelete(true);\n  }; // console.log(dataListMenuSection);\n  //Handling Event\n  //OnClick Event\n\n\n  const handleClickSort = data => {\n    setDataListMenuShow(dataListMenu);\n    setDataListMenuShow(dataCurrent => dataCurrent.filter(listMenu => {\n      return listMenu.menuSection === data;\n    }));\n  };\n\n  const handleClickMenuAddSelect = (menuName, menuId, numberMenu, menuMemo, menuOption) => {\n    if (dataSelectedMenu.find(element => {\n      return element.menuId === menuId;\n    })) {\n      console.log(\"dataSelect\", dataSelectedMenu);\n      var tempDataSelectedMenuOption = dataSelectedMenuOption.map(element => {\n        return element.checkedText;\n      });\n      console.log(\"tempDataSelectedMenuOption\", tempDataSelectedMenuOption);\n      var tempDataSelectedConditionCheck = dataSelectedMenu.filter(element => {\n        return element.menuId === menuId && checkArrayIsSame(element.menuOption, tempDataSelectedMenuOption);\n      });\n      console.log(\"tempDataSelectedConditionCheck\", tempDataSelectedConditionCheck);\n      console.log(\"tempDataSelectedMenuOption\", tempDataSelectedMenuOption); // console.log(checkArrayIsSame(tempDataSelectedConditionCheck.menuOption, tempDataSelectedMenuOption))\n\n      if (tempDataSelectedConditionCheck.length === 0) {\n        console.log(\"do log 1\");\n        const tempListMenuPrice = dataListMenu.filter(element => {\n          if (element._id === menuId) {\n            return element.menuPrice;\n          }\n        });\n        var dataSelected = [];\n        dataSelectedMenuOption.map(item => {\n          menuOption.map(itemOption => {\n            if (item.checkedId === itemOption) {\n              dataSelected = [...dataSelected, item.checkedText];\n            }\n          });\n        });\n        let tempDataPrice = [];\n        dataSelected.forEach(tempDataSelected => {\n          if (Array.isArray(tempDataSelected)) {\n            tempDataSelected.map(tempOfTempDataSelected => {\n              tempDataPrice.push(tempOfTempDataSelected);\n            });\n          } else if (tempDataSelected !== \"\") {\n            tempDataPrice.push(tempDataSelected);\n          }\n        });\n        let tempPrice = 0;\n        tempDataPrice.map(tempData => {\n          tempPrice += dataListMenuOptionChoice.find(temp => temp.menuOptionChoiceName === tempData).menuOptionChoicePrice;\n        }); // console.log(tempPrice)\n        // console.log(tempListMenuPrice[0].menuPrice)\n\n        setDataSelectedMenu(prev => [...prev, {\n          menuName: menuName,\n          menuId: menuId,\n          menuAmount: numberMenu,\n          menuMemo: menuMemo,\n          menuOption: dataSelected,\n          menuPrice: tempListMenuPrice[0].menuPrice,\n          menuTotalPrice: tempListMenuPrice[0].menuPrice + tempPrice\n        }]);\n        setTotalBillPrice(item => {\n          return item += (tempListMenuPrice[0].menuPrice + tempPrice) * numberMenu;\n        });\n      } else if (checkArrayIsSame(tempDataSelectedConditionCheck[0].menuOption, tempDataSelectedMenuOption)) {\n        const newState = dataSelectedMenu.map(item => {\n          if (item.menuId === menuId && checkArrayIsSame(item.menuOption, tempDataSelectedMenuOption)) {\n            var totalNumberMenu = item.menuAmount + numberMenu;\n            setTotalBillPrice(temp => {\n              return temp += item.menuTotalPrice * numberMenu;\n            });\n            return { ...item,\n              menuAmount: totalNumberMenu\n            };\n          }\n\n          return item;\n        });\n        setDataSelectedMenu(newState);\n      } else {\n        const tempListMenuPrice = dataListMenu.filter(element => {\n          if (element._id === menuId) {\n            return element.menuPrice;\n          }\n        });\n        var dataSelected = [];\n        dataSelectedMenuOption.map(item => {\n          menuOption.map(itemOption => {\n            if (item.checkedId === itemOption) {\n              dataSelected = [...dataSelected, item.checkedText];\n            }\n          });\n        });\n        let tempDataPrice = [];\n        dataSelected.forEach(tempDataSelected => {\n          if (Array.isArray(tempDataSelected)) {\n            tempDataSelected.map(tempOfTempDataSelected => {\n              tempDataPrice.push(tempOfTempDataSelected);\n            });\n          } else if (tempDataSelected !== \"\") {\n            tempDataPrice.push(tempDataSelected);\n          }\n        });\n        let tempPrice = 0;\n        tempDataPrice.map(tempData => {\n          tempPrice += dataListMenuOptionChoice.find(temp => temp.menuOptionChoiceName === tempData).menuOptionChoicePrice;\n        }); // console.log(tempPrice)\n        // console.log(tempListMenuPrice[0].menuPrice)\n\n        setDataSelectedMenu(prev => [...prev, {\n          menuName: menuName,\n          menuId: menuId,\n          menuAmount: numberMenu,\n          menuMemo: menuMemo,\n          menuOption: dataSelected,\n          menuPrice: tempListMenuPrice[0].menuPrice,\n          menuTotalPrice: tempListMenuPrice[0].menuPrice + tempPrice\n        }]);\n        setTotalBillPrice(item => {\n          return item += (tempListMenuPrice[0].menuPrice + tempPrice) * numberMenu;\n        });\n      }\n    } else {\n      const tempListMenuPrice = dataListMenu.filter(element => {\n        if (element._id === menuId) {\n          return element.menuPrice;\n        }\n      });\n      var dataSelected = [];\n      dataSelectedMenuOption.map(item => {\n        menuOption.map(itemOption => {\n          if (item.checkedId === itemOption) {\n            dataSelected = [...dataSelected, item.checkedText];\n          }\n        });\n      });\n      let tempDataPrice = [];\n      dataSelected.forEach(tempDataSelected => {\n        if (Array.isArray(tempDataSelected)) {\n          tempDataSelected.map(tempOfTempDataSelected => {\n            tempDataPrice.push(tempOfTempDataSelected);\n          });\n        } else if (tempDataSelected !== \"\") {\n          tempDataPrice.push(tempDataSelected);\n        }\n      });\n      let tempPrice = 0;\n      tempDataPrice.map(tempData => {\n        tempPrice += dataListMenuOptionChoice.find(temp => temp.menuOptionChoiceName === tempData).menuOptionChoicePrice;\n      }); // console.log(tempPrice)\n      // console.log(tempListMenuPrice[0].menuPrice)\n\n      setDataSelectedMenu(prev => [...prev, {\n        menuName: menuName,\n        menuId: menuId,\n        menuAmount: numberMenu,\n        menuMemo: menuMemo,\n        menuOption: dataSelected,\n        menuPrice: tempListMenuPrice[0].menuPrice,\n        menuTotalPrice: tempListMenuPrice[0].menuPrice + tempPrice\n      }]);\n      setTotalBillPrice(item => {\n        return item += (tempListMenuPrice[0].menuPrice + tempPrice) * numberMenu;\n      });\n    }\n\n    setShow(false);\n    setNumberMenu(1);\n    setDataMenuMemo({\n      menuMemo: \"\"\n    });\n    setDataSelectedMenuOption(menuOption.map(item => {\n      const queryMenuTypeAddSelect = dataListMenuOption.filter(element => {\n        if (element._id === item) {\n          return element.menuType;\n        }\n      });\n\n      if (queryMenuTypeAddSelect[0].menuType === 1) {\n        return {\n          checkedId: item,\n          checkedStatus: false,\n          checkedText: \"\"\n        };\n      } else {\n        return {\n          checkedId: item,\n          checkedStatus: false,\n          checkedText: []\n        };\n      }\n    }));\n  }; // console.log(dataSelectedMenu)\n  // console.log(\"meuo Option\", dataSelectedMenuOption)\n\n\n  const handleClickShowList = () => {\n    setDataListMenuShow(dataListMenu);\n  };\n\n  const handleRemoveSelectedMenu = (menuId, menuOption) => {\n    const newStateRemove = dataSelectedMenu.filter(item => item.menuId !== menuId);\n    let tempMenuPrice = dataSelectedMenu.find(item => item.menuId === menuId);\n    setTotalBillPrice(temp => {\n      return temp -= tempMenuPrice.menuTotalPrice * tempMenuPrice.menuAmount;\n    });\n    setDataSelectedMenu(newStateRemove);\n    setShowModalDelete(false);\n  }; //onChange Event\n\n\n  const handleChangeInputMenuMemo = e => {\n    setDataMenuMemo({ ...dataMenuMemo,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleChangeUpdateSelectedOption = (menuOptionId, menuOptionType, menuOptionName) => {\n    // console.log(menuOptionId, menuOptionType, menuOptionName);\n    const setNewStateData = dataSelectedMenuOption.map(item => {\n      if (item.checkedId === menuOptionId) {\n        if (menuOptionType === 1) {\n          if (menuOptionName === item.checkedText) {\n            return { ...item,\n              checkedText: \"\"\n            };\n          } else if (item.checkedText === \"\") {\n            return { ...item,\n              checkedText: menuOptionName\n            };\n          } else if (menuOptionName !== item.checkedText) {\n            return { ...item,\n              checkedText: menuOptionName\n            };\n          }\n        } else if (menuOptionType === 2) {\n          var tempArray = item.checkedText;\n\n          if (tempArray.length === 0) {\n            var newTempArray = [...tempArray, menuOptionName];\n            return { ...item,\n              checkedText: newTempArray\n            };\n          } else if (tempArray.includes(menuOptionName)) {\n            var newTempArray = tempArray.filter(item => item !== menuOptionName);\n            return { ...item,\n              checkedText: newTempArray\n            };\n          } else {\n            var newTempArray = [...tempArray, menuOptionName];\n            return { ...item,\n              checkedText: newTempArray\n            };\n          }\n        }\n      }\n\n      return item;\n    });\n    setDataSelectedMenuOption(setNewStateData); // setDataSelectedMenuOption(currentItem => {\n    // currentItem.map(itemOption => {\n    // if (itemOption.checkedId === querySearchUpdateSelectedOption.checkedId) {\n    // return { ...itemOption, checkedId: menuOptionName }\n    // }\n    // return itemOption\n    // })\n    // })\n  };\n\n  const handleUncheckedRadioButton = (checkedId, menuOptionName) => {\n    var datalog = false;\n    dataSelectedMenuOption.map(item => {\n      if (item.checkedId === checkedId) {\n        if (item.checkedText === menuOptionName) {\n          datalog = true;\n        } else {\n          datalog = false;\n        }\n      }\n    });\n    return datalog;\n  };\n\n  const handleCheckedCheckBox = (checkedId, menuOptionName) => {\n    var datalog = false;\n    dataSelectedMenuOption.map(item => {\n      if (item.checkedId === checkedId) {\n        if (item.checkedText.includes(menuOptionName)) {\n          datalog = true;\n        } else {\n          datalog = false;\n        }\n      }\n    });\n    return datalog;\n  }; // console.log(dataSelectedMenuOption)\n  // console.log(dataSelectedMenu)\n  // console.log(dataMenuMemo);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 8,\n          className: \"mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                size: \"lg\",\n                onClick: () => handleClickShowList(),\n                children: \"\\u0E41\\u0E2A\\u0E14\\u0E07\\u0E17\\u0E31\\u0E49\\u0E07\\u0E2B\\u0E21\\u0E14\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 17\n              }, this), \"   \", dataListMenuSection.map((item, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  size: \"lg\",\n                  onClick: () => handleClickSort(item._id),\n                  children: item.menuSectionName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 21\n                }, this), \"   \"]\n              }, void 0, true))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mt-2\",\n            children: dataListMenuShow.map((item, index) => /*#__PURE__*/_jsxDEV(Col, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                onClick: () => handleShow(item.menuName, item._id, item.menuOption),\n                style: {\n                  cursor: \"pointer\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                  variant: \"top\",\n                  src: \"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22286%22%20height%3D%22180%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20286%20180%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_18230cc1913%20text%20%7B%20fill%3A%23999%3Bfont-weight%3Anormal%3Bfont-family%3Avar(--bs-font-sans-serif)%2C%20monospace%3Bfont-size%3A14pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_18230cc1913%22%3E%3Crect%20width%3D%22286%22%20height%3D%22180%22%20fill%3D%22%23373940%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22108.53973770141602%22%20y%3D%2297.50013675689698%22%3E286x180%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  className: \"m-auto\",\n                  children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: [\" \", item.menuName, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 529,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"mt-2\",\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            border: \"secondary\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: \"\\u0E2A\\u0E23\\u0E38\\u0E1B\\u0E1A\\u0E34\\u0E25\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \" \\u0E23\\u0E32\\u0E22\\u0E01\\u0E32\\u0E23\\u0E2D\\u0E32\\u0E2B\\u0E32\\u0E23 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 17\n              }, this), Object.keys(dataSelectedMenu).length === 0 ? /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: \"\\u0E44\\u0E21\\u0E48\\u0E21\\u0E35\\u0E23\\u0E32\\u0E22\\u0E01\\u0E32\\u0E23\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 19\n              }, this) : \"\", dataSelectedMenu.map((item, index) => /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: 4,\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      children: [/*#__PURE__*/_jsxDEV(Badge, {\n                        bg: \"info\",\n                        children: [item.menuAmount, \"x\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 550,\n                        columnNumber: 30\n                      }, this), \" \", item.menuName, \" \", item.menuPrice, \" \\u0E3F\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 550,\n                      columnNumber: 25\n                    }, this), item.menuOption.map((itemOption, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: Array.isArray(itemOption) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: itemOption.map(itemOptionChoice => {\n                          return /*#__PURE__*/_jsxDEV(Col, {\n                            className: \"text-secondary\",\n                            children: [\"+ \", itemOptionChoice, \" \", dataListMenuOptionChoice.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n                              children: item.menuOptionChoiceName === itemOptionChoice ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                                children: [item.menuOptionChoicePrice, \" \\u0E3F\"]\n                              }, void 0, true) : \"\"\n                            }, void 0, false)), \" \"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 554,\n                            columnNumber: 39\n                          }, this);\n                        })\n                      }, void 0, false) : /*#__PURE__*/_jsxDEV(Col, {\n                        className: \"text-secondary\",\n                        children: [itemOption !== \"\" ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n                          children: [\"+ \", itemOption]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 559,\n                          columnNumber: 84\n                        }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 559,\n                          columnNumber: 134\n                        }, this), \" \", dataListMenuOptionChoice.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n                          children: item.menuOptionChoiceName === itemOption ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                            children: [item.menuOptionChoicePrice, \" \\u0E3F\"]\n                          }, void 0, true) : \"\"\n                        }, void 0, false))]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 559,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false)), item.menuMemo.length === 0 ? /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 564,\n                      columnNumber: 27\n                    }, this) : /*#__PURE__*/_jsxDEV(Col, {\n                      className: \"text-warning\",\n                      children: [\" * \", item.menuMemo]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 566,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 549,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    className: \"align-items-end\",\n                    children: [\" \", \"\\u0E23\\u0E32\\u0E04\\u0E32 \", item.menuAmount, \" x \", \" \", item.menuTotalPrice, \" \\u0E23\\u0E27\\u0E21 \", /*#__PURE__*/_jsxDEV(Badge, {\n                      bg: \"primary\",\n                      children: [\" \", item.menuAmount * item.menuTotalPrice, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 572,\n                      columnNumber: 83\n                    }, this), \" \\u0E1A\\u0E32\\u0E17\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 570,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: 3,\n                    className: \"text-right\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      size: \"sm\",\n                      variant: \"danger\",\n                      onClick: () => handleShowModalDelete(item.menuName, item.menuId, item.menuOption),\n                      children: [/*#__PURE__*/_jsxDEV(BsFillTrashFill, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 582,\n                        columnNumber: 27\n                      }, this), \" \\u0E25\\u0E1A\\u0E40\\u0E21\\u0E19\\u0E39\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 575,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 574,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \" \\u0E2A\\u0E23\\u0E38\\u0E1B\\u0E23\\u0E32\\u0E22\\u0E01\\u0E32\\u0E23 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\" \\u0E23\\u0E32\\u0E04\\u0E32\\u0E2A\\u0E38\\u0E17\\u0E18\\u0E34 \", /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: \"success\",\n                  children: totalBillPrice\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 39\n                }, this), \" \\u0E1A\\u0E32\\u0E17\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 15\n            }, this)]\n          }, \"Light\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      className: \"font-sarabun\",\n      show: show,\n      onHide: () => handleClose(dataModal.menuOption),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"\\u0E40\\u0E1E\\u0E34\\u0E48\\u0E21\\u0E23\\u0E32\\u0E22\\u0E01\\u0E32\\u0E23 \", dataModal.menuName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"\\u0E08\\u0E33\\u0E19\\u0E27\\u0E19\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputSpinner, {\n          type: \"real\",\n          precision: 0,\n          max: 10,\n          min: 1,\n          step: 1,\n          value: numberMenu,\n          onChange: num => setNumberMenu(num),\n          variant: \"dark\",\n          size: \"md\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 11\n        }, this), dataSelectedMenuOption.map(item => {\n          const querydata = dataListMenuOption.find(element => {\n            if (item.checkedId === element._id) {\n              return element;\n            }\n          });\n          return /*#__PURE__*/_jsxDEV(Form, {\n            className: \"mt-2\",\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: [\"\\u0E40\\u0E25\\u0E37\\u0E2D\\u0E01 \", querydata.menuOptionName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 624,\n                columnNumber: 19\n              }, this), querydata.menuOptionChoice.map((element, index) => /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: querydata.menuType === 2 ? \"checkbox\" : \"radio\",\n                id: element._id,\n                name: querydata._id,\n                label: dataListMenuOptionChoice.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: item.menuOptionChoiceName === element.menuOptionChoiceName ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [item.menuOptionChoiceName, \" \\u0E23\\u0E32\\u0E04\\u0E32 \", item.menuOptionChoicePrice, \" \\u0E1A\\u0E32\\u0E17\"]\n                  }, void 0, true) : \"\"\n                }, void 0, false)),\n                checked: querydata.menuType === 1 ? handleUncheckedRadioButton(querydata._id, element.menuOptionChoiceName) : handleCheckedCheckBox(querydata._id, element.menuOptionChoiceName),\n                onClick: () => handleChangeUpdateSelectedOption(querydata._id, querydata.menuType, element.menuOptionChoiceName)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 627,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 22\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Form, {\n          className: \"mt-2\",\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\u0E2B\\u0E21\\u0E32\\u0E22\\u0E40\\u0E2B\\u0E15\\u0E38\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"menuMemo\",\n              size: \"md\",\n              type: \"text\",\n              placeholder: \"\\u0E23\\u0E32\\u0E22\\u0E25\\u0E30\\u0E40\\u0E2D\\u0E35\\u0E22\\u0E14\",\n              onChange: e => handleChangeInputMenuMemo(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => handleClose(dataModal.menuOption),\n          children: \"\\u0E1B\\u0E34\\u0E14\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => handleClickMenuAddSelect(dataModal.menuName, dataModal.menuId, numberMenu, dataMenuMemo.menuMemo, dataModal.menuOption),\n          children: \"\\u0E40\\u0E1E\\u0E34\\u0E48\\u0E21\\u0E40\\u0E21\\u0E19\\u0E39\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      className: \"font-sarabun\",\n      show: showModalDelete,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"\\u0E25\\u0E1A\\u0E23\\u0E32\\u0E22\\u0E01\\u0E32\\u0E23 \", dataModalDelete.menuName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"\\u0E22\\u0E37\\u0E19\\u0E22\\u0E31\\u0E19\\u0E01\\u0E32\\u0E23\\u0E25\\u0E1A\\u0E40\\u0E21\\u0E19\\u0E39\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => handleCloseModalDelete(),\n          children: \"\\u0E1B\\u0E34\\u0E14\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: () => handleRemoveSelectedMenu(dataModalDelete.menuId),\n          children: \"\\u0E25\\u0E1A\\u0E40\\u0E21\\u0E19\\u0E39\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 681,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 489,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cashier, \"xQOmM4r1tjECTMaUiF5na9Dz1BY=\");\n\n_c = Cashier;\nexport default Cashier;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cashier\");","map":{"version":3,"names":["React","useState","useEffect","Button","Col","Container","Row","Card","Modal","Form","Badge","BsFillTrashFill","InputSpinner","listMenu","listMenuSection","listMenuOption","listMenuOptionChoice","Cashier","dataListMenuSection","setDataListMenuSection","dataListMenuOption","setDataListMenuOption","dataListMenuShow","setDataListMenuShow","dataListMenu","setDataListMenu","dataListMenuOptionChoice","setDataListMenuOptionChoice","dataSelectedMenu","setDataSelectedMenu","dataSelectedMenuOption","setDataSelectedMenuOption","dataTotalPrice","setDataTotalPrice","dataListMenuOnCondition","setDataListMenuOnCondition","totalBillPrice","setTotalBillPrice","show","setShow","showModalDelete","setShowModalDelete","dataModal","setDataModal","menuName","menuId","menuOption","dataModalDelete","setDataModalDelete","numberMenu","setNumberMenu","dataMenuMemo","setDataMenuMemo","menuMemo","getNestedArrayToOneArray","array1","tempArray","forEach","tempDataSelected","Array","isArray","map","tempOfTempDataSelected","push","checkArrayIsSame","array2","tempArray1","tempArray2","isSame","length","every","element","index","loadDataMenuSection","then","res","data","catch","error","console","log","response","loadDataMenuOption","loadDataMenu","loadDataMenuOptionChoice","handleClose","item","queryMenuTypeAddSelect","filter","_id","menuType","checkedId","checkedStatus","checkedText","handleShow","queryMenuType","handleCloseModalDelete","handleShowModalDelete","handleClickSort","dataCurrent","menuSection","handleClickMenuAddSelect","find","tempDataSelectedMenuOption","tempDataSelectedConditionCheck","tempListMenuPrice","menuPrice","dataSelected","itemOption","tempDataPrice","tempPrice","tempData","temp","menuOptionChoiceName","menuOptionChoicePrice","prev","menuAmount","menuTotalPrice","newState","totalNumberMenu","handleClickShowList","handleRemoveSelectedMenu","newStateRemove","tempMenuPrice","handleChangeInputMenuMemo","e","target","name","value","handleChangeUpdateSelectedOption","menuOptionId","menuOptionType","menuOptionName","setNewStateData","newTempArray","includes","handleUncheckedRadioButton","datalog","handleCheckedCheckBox","menuSectionName","cursor","Object","keys","itemOptionChoice","num","querydata","menuOptionChoice"],"sources":["/Users/sawidlimkiatsataporn/Documents/Project_Web_Application/LaiCoffeeCashier/frontend/src/components/pages/cashier/Cashier.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Col,\n  Container,\n  Row,\n  Card,\n  Modal,\n  Form,\n  Badge,\n} from \"react-bootstrap\";\nimport { BsFillTrashFill } from \"react-icons/bs\";\nimport InputSpinner from \"react-bootstrap-input-spinner\";\nimport { listMenu } from \"../../functions/menu\";\n\nimport { listMenuSection } from \"../../functions/menusection\";\nimport { listMenuOption, listMenuOptionChoice } from \"../../functions/menuoption\";\n\nconst Cashier = () => {\n  // Initial Variable\n  // Data Fetch Variable\n  const [dataListMenuSection, setDataListMenuSection] = useState([]);\n  const [dataListMenuOption, setDataListMenuOption] = useState([]);\n  const [dataListMenuShow, setDataListMenuShow] = useState([]);\n  const [dataListMenu, setDataListMenu] = useState([]);\n  const [dataListMenuOptionChoice, setDataListMenuOptionChoice] = useState([]);\n  // Data On Page\n  const [dataSelectedMenu, setDataSelectedMenu] = useState([]);\n  const [dataSelectedMenuOption, setDataSelectedMenuOption] = useState([]);\n  const [dataTotalPrice, setDataTotalPrice] = useState([]);\n  const [dataListMenuOnCondition, setDataListMenuOnCondition] = useState([]);\n  // Gobal Variable\n  const [totalBillPrice,setTotalBillPrice] = useState(0);\n  // Modal\n  const [show, setShow] = useState(false);\n  const [showModalDelete, setShowModalDelete] = useState(false);\n  const [dataModal, setDataModal] = useState({ menuName: \"\", menuId: \"\", menuOption: [] });\n  const [dataModalDelete, setDataModalDelete] = useState({\n    menuName: \"\",\n    menuId: \"\",\n    menuOption: \"\",\n  });\n  const [numberMenu, setNumberMenu] = useState(1);\n\n  // Temporary Data\n  const [dataMenuMemo, setDataMenuMemo] = useState({ menuMemo: \"\" });\n  \n  // Functional\n  const getNestedArrayToOneArray = (array1) => {\n    let tempArray = []\n    array1.forEach((tempDataSelected) => {\n        if (Array.isArray(tempDataSelected)) {\n          tempDataSelected.map((tempOfTempDataSelected) => {\n            tempArray.push(tempOfTempDataSelected)\n          })\n        }\n        else if (tempDataSelected !== \"\") {\n          tempArray.push(tempDataSelected)\n        }\n        \n      })\n      return tempArray\n  }\n\n  const checkArrayIsSame = (array1, array2) => {\n    let tempArray1 = getNestedArrayToOneArray(array1)\n    let tempArray2 = getNestedArrayToOneArray(array2)\n    let isSame = (tempArray1.length == tempArray2.length) && tempArray1.every(function(element, index) {\n      return element === tempArray2[index]; \n    });\n    return isSame\n  }\n\n  // Fetch Data\n  const loadDataMenuSection = () => {\n    listMenuSection()\n      .then((res) => {\n        setDataListMenuSection(res.data);\n      })\n      .catch((error) => {\n        console.log(error.response.data);\n      });\n  };\n\n  const loadDataMenuOption = () => {\n    listMenuOption()\n      .then((res) => {\n        setDataListMenuOption(res.data);\n      })\n      .catch((error) => {\n        console.log(error.response.data);\n      });\n  };\n\n  const loadDataMenu = () => {\n    listMenu()\n      .then((res) => {\n        setDataListMenu(res.data);\n        setDataListMenuShow(res.data);\n      })\n      .catch((error) => {\n        console.log(error.response.data);\n      });\n  };\n\n  const loadDataMenuOptionChoice = () => {\n    listMenuOptionChoice()\n      .then((res) => {\n        setDataListMenuOptionChoice(res.data);\n      })\n      .catch((error) => {\n        console.log(error.response.data);\n      });\n  };\n\n  // useEffect Action\n  useEffect(() => {\n    loadDataMenuSection();\n    loadDataMenuOption();\n    loadDataMenu();\n    loadDataMenuOptionChoice();\n  }, []);\n\n  // Modal Action\n  const handleClose = (menuOption) => {\n    setDataSelectedMenuOption(menuOption.map(item => {\n      const queryMenuTypeAddSelect = dataListMenuOption.filter((element) => {\n        if (element._id === item) {\n          return element.menuType\n        }\n      })\n      if (queryMenuTypeAddSelect[0].menuType === 1) {\n        return { checkedId: item, checkedStatus: false, checkedText: \"\" }\n      }\n      else {\n        return { checkedId: item, checkedStatus: false, checkedText: [] }\n      }\n    }))\n    setShow(false);\n  };\n\n  const handleShow = (menuName, menuId, menuOption) => {\n    setDataModal({ menuName: menuName, menuId: menuId, menuOption: menuOption });\n    setDataSelectedMenuOption(menuOption.map(item => {\n      const queryMenuType = dataListMenuOption.filter((element) => {\n        if (element._id === item) {\n          return element.menuType\n        }\n      })\n      \n      // console.log(dataListMenuOptionChoice)\n      if (queryMenuType[0].menuType === 1) {\n        return { checkedId: item, checkedStatus: false, checkedText: \"\" }\n      }\n      else {\n        return { checkedId: item, checkedStatus: false, checkedText: [] }\n      }\n    }))\n    setShow(true);\n\n    // console.log(dataModal);\n  };\n\n  // console.log(dataSelectedMenuOption)\n\n  const handleCloseModalDelete = () => {\n    setShowModalDelete(false);\n  };\n\n  const handleShowModalDelete = (menuName, menuId, menuOption) => {\n    setDataModalDelete({ menuName: menuName, menuId: menuId, menuOption });\n    setShowModalDelete(true);\n  };\n\n  // console.log(dataListMenuSection);\n\n  //Handling Event\n  //OnClick Event\n  const handleClickSort = (data) => {\n    setDataListMenuShow(dataListMenu);\n    setDataListMenuShow((dataCurrent) =>\n      dataCurrent.filter((listMenu) => {\n        return listMenu.menuSection === data;\n      })\n    );\n  };\n\n  const handleClickMenuAddSelect = (menuName, menuId, numberMenu, menuMemo, menuOption) => {\n    if (\n      dataSelectedMenu.find((element) => {\n        return element.menuId === menuId;\n      })\n    ) {\n      console.log(\"dataSelect\", dataSelectedMenu)\n      \n      var tempDataSelectedMenuOption = dataSelectedMenuOption.map((element) => {\n        return element.checkedText\n      })\n      console.log(\"tempDataSelectedMenuOption\", tempDataSelectedMenuOption)\n      var tempDataSelectedConditionCheck = dataSelectedMenu.filter((element) => {\n        return element.menuId === menuId && checkArrayIsSame(element.menuOption, tempDataSelectedMenuOption);\n      })\n      console.log(\"tempDataSelectedConditionCheck\", tempDataSelectedConditionCheck)\n      console.log(\"tempDataSelectedMenuOption\", tempDataSelectedMenuOption)\n      // console.log(checkArrayIsSame(tempDataSelectedConditionCheck.menuOption, tempDataSelectedMenuOption))\n      if (tempDataSelectedConditionCheck.length === 0) {\n        console.log(\"do log 1\")\n        const tempListMenuPrice = dataListMenu.filter((element) => {\n          if (element._id === menuId) {\n            return element.menuPrice\n          }\n        })\n        var dataSelected = []\n        dataSelectedMenuOption.map(item => {\n          menuOption.map(itemOption => {\n            if (item.checkedId === itemOption) {\n              dataSelected = [...dataSelected, item.checkedText]\n            }\n          })\n        })\n        let tempDataPrice = []\n        dataSelected.forEach((tempDataSelected) => {\n          if (Array.isArray(tempDataSelected)) {\n            tempDataSelected.map((tempOfTempDataSelected) => {\n              tempDataPrice.push(tempOfTempDataSelected)\n            })\n          }\n          else if (tempDataSelected !== \"\") {\n            tempDataPrice.push(tempDataSelected)\n          }\n          \n        })\n        let tempPrice = 0\n        tempDataPrice.map((tempData) => {\n          tempPrice += (dataListMenuOptionChoice.find(temp => temp.menuOptionChoiceName === tempData)).menuOptionChoicePrice\n        })\n        // console.log(tempPrice)\n        // console.log(tempListMenuPrice[0].menuPrice)\n        setDataSelectedMenu((prev) => [\n          ...prev,\n          {\n            menuName: menuName,\n            menuId: menuId,\n            menuAmount: numberMenu,\n            menuMemo: menuMemo,\n            menuOption: dataSelected,\n            menuPrice: tempListMenuPrice[0].menuPrice,\n            menuTotalPrice: tempListMenuPrice[0].menuPrice + tempPrice,\n          },\n        ]);\n        setTotalBillPrice(item => {\n          return item += (tempListMenuPrice[0].menuPrice + tempPrice) * numberMenu\n        })\n      }\n      else if (checkArrayIsSame(tempDataSelectedConditionCheck[0].menuOption, tempDataSelectedMenuOption)) {\n        const newState = dataSelectedMenu.map((item) => {\n          if (item.menuId === menuId && checkArrayIsSame(item.menuOption, tempDataSelectedMenuOption)) {\n            var totalNumberMenu = item.menuAmount + numberMenu;\n            setTotalBillPrice(temp => {\n              return temp += (item.menuTotalPrice) * numberMenu\n            })\n            return { ...item, menuAmount: totalNumberMenu };\n          }\n          return item;\n        });\n        setDataSelectedMenu(newState);\n      }\n      else {\n        const tempListMenuPrice = dataListMenu.filter((element) => {\n          if (element._id === menuId) {\n            return element.menuPrice\n          }\n        })\n        var dataSelected = []\n        dataSelectedMenuOption.map(item => {\n          menuOption.map(itemOption => {\n            if (item.checkedId === itemOption) {\n              dataSelected = [...dataSelected, item.checkedText]\n            }\n          })\n        })\n        let tempDataPrice = []\n        dataSelected.forEach((tempDataSelected) => {\n          if (Array.isArray(tempDataSelected)) {\n            tempDataSelected.map((tempOfTempDataSelected) => {\n              tempDataPrice.push(tempOfTempDataSelected)\n            })\n          }\n          else if (tempDataSelected !== \"\") {\n            tempDataPrice.push(tempDataSelected)\n          }\n          \n        })\n        let tempPrice = 0\n        tempDataPrice.map((tempData) => {\n          tempPrice += (dataListMenuOptionChoice.find(temp => temp.menuOptionChoiceName === tempData)).menuOptionChoicePrice\n        })\n        // console.log(tempPrice)\n        // console.log(tempListMenuPrice[0].menuPrice)\n        setDataSelectedMenu((prev) => [\n          ...prev,\n          {\n            menuName: menuName,\n            menuId: menuId,\n            menuAmount: numberMenu,\n            menuMemo: menuMemo,\n            menuOption: dataSelected,\n            menuPrice: tempListMenuPrice[0].menuPrice,\n            menuTotalPrice: tempListMenuPrice[0].menuPrice + tempPrice,\n          },\n        ]);\n        setTotalBillPrice(item => {\n          return item += (tempListMenuPrice[0].menuPrice + tempPrice) * numberMenu\n        })\n      }\n      \n    } else {\n      const tempListMenuPrice = dataListMenu.filter((element) => {\n        if (element._id === menuId) {\n          return element.menuPrice\n        }\n      })\n      var dataSelected = []\n      dataSelectedMenuOption.map(item => {\n        menuOption.map(itemOption => {\n          if (item.checkedId === itemOption) {\n            dataSelected = [...dataSelected, item.checkedText]\n          }\n        })\n      })\n      let tempDataPrice = []\n      dataSelected.forEach((tempDataSelected) => {\n        if (Array.isArray(tempDataSelected)) {\n          tempDataSelected.map((tempOfTempDataSelected) => {\n            tempDataPrice.push(tempOfTempDataSelected)\n          })\n        }\n        else if (tempDataSelected !== \"\") {\n          tempDataPrice.push(tempDataSelected)\n        }\n        \n      })\n      let tempPrice = 0\n      tempDataPrice.map((tempData) => {\n        tempPrice += (dataListMenuOptionChoice.find(temp => temp.menuOptionChoiceName === tempData)).menuOptionChoicePrice\n      })\n      // console.log(tempPrice)\n      // console.log(tempListMenuPrice[0].menuPrice)\n      setDataSelectedMenu((prev) => [\n        ...prev,\n        {\n          menuName: menuName,\n          menuId: menuId,\n          menuAmount: numberMenu,\n          menuMemo: menuMemo,\n          menuOption: dataSelected,\n          menuPrice: tempListMenuPrice[0].menuPrice,\n          menuTotalPrice: tempListMenuPrice[0].menuPrice + tempPrice,\n        },\n      ]);\n      setTotalBillPrice(item => {\n        return item += (tempListMenuPrice[0].menuPrice + tempPrice) * numberMenu\n      })\n    }\n    \n    setShow(false);\n    setNumberMenu(1);\n    setDataMenuMemo({ menuMemo: \"\" });\n    \n    setDataSelectedMenuOption(menuOption.map(item => {\n      const queryMenuTypeAddSelect = dataListMenuOption.filter((element) => {\n        if (element._id === item) {\n          return element.menuType\n        }\n      })\n      if (queryMenuTypeAddSelect[0].menuType === 1) {\n        return { checkedId: item, checkedStatus: false, checkedText: \"\" }\n      }\n      else {\n        return { checkedId: item, checkedStatus: false, checkedText: [] }\n      }\n    }))\n  };\n\n  // console.log(dataSelectedMenu)\n  // console.log(\"meuo Option\", dataSelectedMenuOption)\n\n  const handleClickShowList = () => {\n    setDataListMenuShow(dataListMenu);\n  };\n\n  const handleRemoveSelectedMenu = (menuId, menuOption) => {\n    const newStateRemove = dataSelectedMenu.filter(\n      (item) => item.menuId !== menuId\n    );\n    let tempMenuPrice = dataSelectedMenu.find(item => item.menuId === menuId)\n    setTotalBillPrice(temp => {\n      return temp -= (tempMenuPrice.menuTotalPrice) * tempMenuPrice.menuAmount\n    })\n    setDataSelectedMenu(newStateRemove);\n    setShowModalDelete(false);\n  };\n\n  //onChange Event\n  const handleChangeInputMenuMemo = (e) => {\n    setDataMenuMemo({ ...dataMenuMemo, [e.target.name]: e.target.value });\n  };\n\n  const handleChangeUpdateSelectedOption = (menuOptionId, menuOptionType, menuOptionName) => {\n    // console.log(menuOptionId, menuOptionType, menuOptionName);\n    const setNewStateData = dataSelectedMenuOption.map(item => {\n      if (item.checkedId === menuOptionId) {\n        if (menuOptionType === 1) {\n          if (menuOptionName === item.checkedText) {\n            return { ...item, checkedText: \"\" }\n          }\n          else if (item.checkedText === \"\") {\n            return { ...item, checkedText: menuOptionName }\n          }\n          else if (menuOptionName !== item.checkedText) {\n            return { ...item, checkedText: menuOptionName }\n          }\n        }\n        else if (menuOptionType === 2) {\n          var tempArray = item.checkedText\n          if (tempArray.length === 0) {\n            var newTempArray = [...tempArray, menuOptionName]\n            return { ...item, checkedText: newTempArray }\n          }\n          else if (tempArray.includes(menuOptionName)) {\n            var newTempArray = tempArray.filter(item =>\n              item !== menuOptionName\n            )\n            return { ...item, checkedText: newTempArray }\n          }\n          else {\n            var newTempArray = [...tempArray, menuOptionName]\n            return { ...item, checkedText: newTempArray }\n          }\n        }\n      }\n      return item\n    })\n    setDataSelectedMenuOption(setNewStateData)\n    // setDataSelectedMenuOption(currentItem => {\n    // currentItem.map(itemOption => {\n    // if (itemOption.checkedId === querySearchUpdateSelectedOption.checkedId) {\n    // return { ...itemOption, checkedId: menuOptionName }\n    // }\n    // return itemOption\n    // })\n    // })\n  }\n\n  const handleUncheckedRadioButton = (checkedId, menuOptionName) => {\n    var datalog = false\n    dataSelectedMenuOption.map(item => {\n      if (item.checkedId === checkedId) {\n        if (item.checkedText === menuOptionName) {\n          datalog = true\n        }\n        else {\n          datalog = false\n        }\n      }\n    })\n    return datalog\n  }\n\n  const handleCheckedCheckBox = (checkedId, menuOptionName) => {\n    var datalog = false\n    dataSelectedMenuOption.map(item => {\n      if (item.checkedId === checkedId) {\n        if (item.checkedText.includes(menuOptionName)) {\n          datalog = true\n        }\n        else {\n          datalog = false\n        }\n      }\n    })\n    return datalog\n  }\n\n  // console.log(dataSelectedMenuOption)\n  // console.log(dataSelectedMenu)\n  // console.log(dataMenuMemo);\n  return (\n    <div>\n      <Container fluid={true}>\n        <Row>\n          <Col md={8} className=\"mt-2\">\n            <Row>\n              <Col>\n                <Button\n                  variant=\"primary\"\n                  size=\"lg\"\n                  onClick={() => handleClickShowList()}\n                >\n                  แสดงทั้งหมด\n                </Button>\n                {\"   \"}\n                {dataListMenuSection.map((item, index) => (\n                  <>\n                    <Button\n                      variant=\"primary\"\n                      size=\"lg\"\n                      onClick={() => handleClickSort(item._id)}\n                    >\n                      {item.menuSectionName}\n                    </Button>\n                    {\"   \"}\n                  </>\n                ))}\n              </Col>\n            </Row>\n            <Row className=\"mt-2\">\n              {dataListMenuShow.map((item, index) => (\n                <Col md={2}>\n                  <Card\n                    onClick={() => handleShow(item.menuName, item._id, item.menuOption)}\n                    style={{ cursor: \"pointer\" }}\n                  >\n                    <Card.Img\n                      variant=\"top\"\n                      src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22286%22%20height%3D%22180%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20286%20180%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_18230cc1913%20text%20%7B%20fill%3A%23999%3Bfont-weight%3Anormal%3Bfont-family%3Avar(--bs-font-sans-serif)%2C%20monospace%3Bfont-size%3A14pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_18230cc1913%22%3E%3Crect%20width%3D%22286%22%20height%3D%22180%22%20fill%3D%22%23373940%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22108.53973770141602%22%20y%3D%2297.50013675689698%22%3E286x180%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\"\n                    />\n                    <Card.Body className=\"m-auto\">\n                      <Card.Title> {item.menuName} </Card.Title>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              ))}\n            </Row>\n          </Col>\n          <Col className=\"mt-2\" md={4}>\n            <Card border=\"secondary\" key={\"Light\"}>\n              <Card.Header>สรุปบิล</Card.Header>\n              <Card.Body>\n                <Card.Title> รายการอาหาร </Card.Title>\n                {Object.keys(dataSelectedMenu).length === 0 ? (\n                  <Card.Text>ไม่มีรายการ</Card.Text>\n                ) : (\n                  \"\"\n                )}\n                {dataSelectedMenu.map((item, index) => (\n                  <Card.Text>\n                    <Row>\n                      <Col md={4}>\n                        <Col><Badge bg=\"info\">{item.menuAmount}x</Badge> {item.menuName} {item.menuPrice} ฿</Col>\n                        {item.menuOption.map((itemOption, index) => (<>{\n                          Array.isArray(itemOption) ? <>{\n                            itemOption.map(itemOptionChoice => {\n                              return (<Col className=\"text-secondary\">+ {itemOptionChoice} {\n                                dataListMenuOptionChoice.map(item => (<>{item.menuOptionChoiceName === itemOptionChoice ? <>{item.menuOptionChoicePrice} ฿</> : \"\"}</>))\n                              } </Col>)\n                            })\n                          }</>\n                            : <Col className=\"text-secondary\">{itemOption !== \"\" ? <React.Fragment>+ {itemOption}</React.Fragment> : <React.Fragment></React.Fragment>} {\n                              dataListMenuOptionChoice.map(item => (<>{item.menuOptionChoiceName === itemOption ? <>{item.menuOptionChoicePrice} ฿</> : \"\"}</>))\n                            }</Col>\n                        }</>))}\n                        {item.menuMemo.length === 0 ? (\n                          <React.Fragment></React.Fragment>\n                        ) : (\n                          <Col className=\"text-warning\"> * {item.menuMemo}</Col>\n                        )}\n\n                      </Col>\n                      <Col className=\"align-items-end\">\n                        {\" \"}\n                        ราคา {item.menuAmount}{\" x \"} { item.menuTotalPrice } รวม <Badge bg=\"primary\"> { item.menuAmount * item.menuTotalPrice } </Badge> บาท\n                      </Col>\n                      <Col md={3} className=\"text-right\">\n                        <Button\n                          size=\"sm\"\n                          variant=\"danger\"\n                          onClick={() =>\n                            handleShowModalDelete(item.menuName, item.menuId, item.menuOption)\n                          }\n                        >\n                          <BsFillTrashFill /> ลบเมนู\n                        </Button>\n                      </Col>\n                    </Row>\n                  </Card.Text>\n                ))}\n\n                <Card.Title> สรุปรายการ </Card.Title>\n                <Card.Text> ราคาสุทธิ <Badge bg=\"success\">{totalBillPrice}</Badge> บาท</Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n      {/* Modal */}\n\n      <Modal className=\"font-sarabun\" show={show} onHide={() => handleClose(dataModal.menuOption)}>\n        <Modal.Header>\n          <Modal.Title>เพิ่มรายการ {dataModal.menuName}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Label>จำนวน</Form.Label>\n          <InputSpinner\n            type={\"real\"}\n            precision={0}\n            max={10}\n            min={1}\n            step={1}\n            value={numberMenu}\n            onChange={(num) => setNumberMenu(num)}\n            variant={\"dark\"}\n            size=\"md\"\n          />\n          {\n            dataSelectedMenuOption.map(item => {\n              const querydata = dataListMenuOption.find(element => {\n                if (item.checkedId === element._id) {\n                  return element\n                }\n              })\n              return <Form className=\"mt-2\">\n                <Form.Group>\n                  <Form.Label>เลือก {querydata.menuOptionName}</Form.Label>\n                  {\n                    querydata.menuOptionChoice.map((element, index) => (\n                      <Form.Check\n                        type={querydata.menuType === 2 ? \"checkbox\" : \"radio\"}\n                        id={element._id}\n                        name={querydata._id}\n                        label={\n                          dataListMenuOptionChoice.map(item => (<>\n                            {item.menuOptionChoiceName === element.menuOptionChoiceName ? <>{item.menuOptionChoiceName} ราคา {item.menuOptionChoicePrice} บาท</> : \"\"}\n                          </>))\n                        }\n                        checked={querydata.menuType === 1 ? handleUncheckedRadioButton(querydata._id, element.menuOptionChoiceName) : handleCheckedCheckBox(querydata._id, element.menuOptionChoiceName)}\n                        onClick={() => handleChangeUpdateSelectedOption(querydata._id, querydata.menuType, element.menuOptionChoiceName)}\n                      />\n                    ))\n                  }\n\n                </Form.Group>\n              </Form>\n            })\n          }\n\n\n          <Form className=\"mt-2\">\n            <Form.Group>\n              <Form.Label>หมายเหตุ</Form.Label>\n              <Form.Control\n                name=\"menuMemo\"\n                size=\"md\"\n                type=\"text\"\n                placeholder=\"รายละเอียด\"\n                onChange={(e) => handleChangeInputMenuMemo(e)}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => handleClose(dataModal.menuOption)}>\n            ปิด\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={() =>\n              handleClickMenuAddSelect(\n                dataModal.menuName,\n                dataModal.menuId,\n                numberMenu,\n                dataMenuMemo.menuMemo,\n                dataModal.menuOption\n              )\n            }\n          >\n            เพิ่มเมนู\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal\n        className=\"font-sarabun\"\n        show={showModalDelete}\n      >\n        <Modal.Header>\n          <Modal.Title>ลบรายการ {dataModalDelete.menuName}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>ยืนยันการลบเมนู</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => handleCloseModalDelete()}>\n            ปิด\n          </Button>\n          <Button\n            variant=\"danger\"\n            onClick={() => handleRemoveSelectedMenu(dataModalDelete.menuId)}\n          >\n            ลบเมนู\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Cashier;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}